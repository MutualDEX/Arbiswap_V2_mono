{
  "contractName": "IUniswapV1Factory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getExchange",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getExchange\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/dzack/Arbiswap_V2_mono/packages/other_contracts/contracts/interfaces/V1/IUniswapV1Factory.sol\":\"IUniswapV1Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/dzack/Arbiswap_V2_mono/packages/other_contracts/contracts/interfaces/V1/IUniswapV1Factory.sol\":{\"keccak256\":\"0x2a554e26d874fa4b10736f2e2ac1ba6253cd1ad08a97bd941cb0a41015565589\",\"urls\":[\"bzz-raw://bbe29db0ebf08621cb4211219c02262be9c7510fe03bab94f849a38993f957d6\",\"dweb:/ipfs/QmTutAVpjg925m4JLqHTvukdTyoTr77FotAUAA2AzGug1f\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity >=0.5.0;\n\ninterface IUniswapV1Factory {\n    function getExchange(address) external view returns (address);\n}\n",
  "sourcePath": "/Users/dzack/Arbiswap_V2_mono/packages/other_contracts/contracts/interfaces/V1/IUniswapV1Factory.sol",
  "ast": {
    "absolutePath": "/Users/dzack/Arbiswap_V2_mono/packages/other_contracts/contracts/interfaces/V1/IUniswapV1Factory.sol",
    "exportedSymbols": {
      "IUniswapV1Factory": [
        3060
      ]
    },
    "id": 3061,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3052,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 3060,
        "linearizedBaseContracts": [
          3060
        ],
        "name": "IUniswapV1Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "06f2bf62",
            "id": 3059,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3054,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3059,
                  "src": "81:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "81:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "80:9:10"
            },
            "returnParameters": {
              "id": 3058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3057,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3059,
                  "src": "113:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "113:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "112:9:10"
            },
            "scope": 3060,
            "src": "60:62:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3061,
        "src": "26:98:10"
      }
    ],
    "src": "0:125:10"
  },
  "legacyAST": {
    "absolutePath": "/Users/dzack/Arbiswap_V2_mono/packages/other_contracts/contracts/interfaces/V1/IUniswapV1Factory.sol",
    "exportedSymbols": {
      "IUniswapV1Factory": [
        3060
      ]
    },
    "id": 3061,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3052,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:10"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": null,
        "fullyImplemented": false,
        "id": 3060,
        "linearizedBaseContracts": [
          3060
        ],
        "name": "IUniswapV1Factory",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "functionSelector": "06f2bf62",
            "id": 3059,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getExchange",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3055,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3054,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3059,
                  "src": "81:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "81:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "80:9:10"
            },
            "returnParameters": {
              "id": 3058,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3057,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3059,
                  "src": "113:7:10",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3056,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "113:7:10",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "112:9:10"
            },
            "scope": 3060,
            "src": "60:62:10",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 3061,
        "src": "26:98:10"
      }
    ],
    "src": "0:125:10"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-09-21T15:53:32.694Z",
  "devdoc": {
    "methods": {}
  },
  "userdoc": {
    "methods": {}
  }
}